
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &none             &none             &none                   &none               &none   &none               &none                                                                    &none   &none              &none          &none              &none     &none   &none
 &kp TAB             &kp Q             &kp W  &mt LC(LS(LA(LGUI))) E  &mt LEFT_CONTROL R   &kp T               &none                                                                    &none   &kp Y              &kp U          &kp I              &kp O     &kp P   &none
 &kp ESC  &mt LEFT_SHIFT A           &lt 3 S                 &lt 2 D             &lt 1 F   &kp G               &none  &kp CAPSLOCK  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H              &kp J          &kp K              &kp L  &kp SEMI   &none
   &none             &kp Z             &kp X                   &kp C               &kp V   &kp B                                    &kp HOME                  &kp PG_UP                         &kp N              &kp M      &kp COMMA            &kp DOT  &kp FSLH   &none
   &none             &none  &kp LEFT_CONTROL            &kp LEFT_ALT    &kp LEFT_COMMAND                    &kp BSPC       &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE          &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_COMMAND     &none   &none
            >;
        };

        layer_symbols {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5               &none                                                                 &none            &none             &none              &none                 &none                  &none   &none
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none  &kp EXCLAMATION  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES      &kp LEFT_BRACKET      &kp RIGHT_BRACKET   &none
   &kp ESC      &mo 4     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none     &kp ASTERISK         &kp MINUS          &kp EQUAL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &none
     &none      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                          &kp AMPERSAND    &kp UNDERSCORE           &kp PLUS        &kp LEFT_BRACE        &kp RIGHT_BRACE   &none
     &none  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp SPACE                              &none              &none                 &none                  &none   &none
            >;
        };

        layer_symbols2 {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3     &kp F7       &kp F8       &kp F9    &kp F10    &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none     &trans       &trans       &trans     &trans     &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &kp SLASH  &kp AT_SIGN  &kp PERCENT  &kp TILDE   &kp PIPE   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                     &trans    &kp CARET   &kp DOLLAR   &kp HASH  &kp GRAVE   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                  &trans       &trans     &trans     &trans   &trans
            >;
        };

        layer_numbers {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                             &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_misc {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans      &trans      &trans             &trans           &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &kp C_NEXT  &kp C_PLAY  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans      &trans      &trans             &trans           &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                      &trans      &trans             &trans           &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans                  &trans             &trans           &trans  &trans  &trans
            >;
        };

    };
};
